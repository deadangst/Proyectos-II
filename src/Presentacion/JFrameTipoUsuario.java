/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import AccesoDatos.TipoUsuario;
import Entidades.Excepciones.TipoUsuarioExcepcion;
import Negocio.TipoUsuatioNegocio;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;



/**
 *
 * @author Usuario
 */
public class JFrameTipoUsuario extends javax.swing.JFrame {
    
    private final TipoUsuatioNegocio tipoNegocio;

    /**
     * Creates new form JFrameTipoUsuario
     */
    public JFrameTipoUsuario() {
        initComponents();
         tipoNegocio = new TipoUsuatioNegocio();
        TableModel tableModel = this.completarTableModel();
       jTable1.setModel(tableModel);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
     private TableModel completarTableModel() {
        try {
            List<TipoUsuario> listaTipoUsuario = tipoNegocio.consultarTodosLosTipoUsuario();
            Object[] columnas = new Object[]{"Gerente", "Administrador", "Empleado", "Cliente"};
            Object[][] datos = new Object[listaTipoUsuario.size()][columnas.length];
            for (int i = 0; i < listaTipoUsuario.size(); i++) {
                datos[i][0] = listaTipoUsuario.get(i).getGerente();
                datos[i][1] = listaTipoUsuario.get(i).getAdministrador();
                datos[i][2] = listaTipoUsuario.get(i).getEmpleado();
                datos[i][3] = listaTipoUsuario.get(i).getCliente();
                
            }
            DefaultTableModel model = new DefaultTableModel(datos, columnas);
            return model;

        } catch (Exception ex) {
            Logger.getLogger(JFrameTipoUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1Nombre = new javax.swing.JLabel();
        jTextField1Gerente = new javax.swing.JTextField();
        Ingresar = new javax.swing.JButton();
        jButton2Eliminar = new javax.swing.JButton();
        jButton3Actualizar = new javax.swing.JButton();
        Gerente = new javax.swing.JLabel();
        jLabel2Admin = new javax.swing.JLabel();
        jLabel3Empleado = new javax.swing.JLabel();
        jLabel4Cliente = new javax.swing.JLabel();
        jTextField1Administrador = new javax.swing.JTextField();
        jTextField2Empleado = new javax.swing.JTextField();
        jTextField3Cliente = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1230, 720));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Gerente", "Administrador", "Empleado", "Cliente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel1Nombre.setText("Â¿Que tipo de usuario desea ingresar?");

        jTextField1Gerente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1GerenteActionPerformed(evt);
            }
        });

        Ingresar.setText("Ingresar");
        Ingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IngresarActionPerformed(evt);
            }
        });

        jButton2Eliminar.setText("Eliminar");
        jButton2Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2EliminarActionPerformed(evt);
            }
        });

        jButton3Actualizar.setFont(new java.awt.Font("Palatino Linotype", 0, 14)); // NOI18N
        jButton3Actualizar.setForeground(new java.awt.Color(0, 204, 153));
        jButton3Actualizar.setText("Actualizar");

        Gerente.setText("Gerente");

        jLabel2Admin.setText("Administrador");

        jLabel3Empleado.setText("Empleado");

        jLabel4Cliente.setText("Cliente");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1272, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1Nombre)
                        .addGap(32, 1036, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2Admin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addComponent(jTextField1Administrador, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Gerente)
                                    .addComponent(jLabel3Empleado)
                                    .addComponent(jLabel4Cliente))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1Gerente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2Empleado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField3Cliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(263, 263, 263)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Ingresar)
                            .addComponent(jButton3Actualizar)
                            .addComponent(jButton2Eliminar))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jLabel1Nombre)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Gerente)
                            .addComponent(jTextField1Gerente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2Admin)
                            .addComponent(jTextField1Administrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3Empleado)
                            .addComponent(jTextField2Empleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4Cliente)
                            .addComponent(jTextField3Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton3Actualizar)
                        .addGap(18, 18, 18)
                        .addComponent(Ingresar)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2Eliminar)))
                .addContainerGap(283, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IngresarActionPerformed
        if (ValidarFormulario()) {
            TipoUsuario tpUsuario = CapturaTipoUsuario();
            try {
                String insertar = tipoNegocio.Ingresar(tpUsuario);
                if (insertar.equals("Error")) {
                    throw new TipoUsuarioExcepcion("Ocurrio un Error al ingresar ");
                } else {
                    JOptionPane.showMessageDialog(this, "Estudiante Creado Satisfactoriamente" + insertar, null, 1);
                    RefrescarTabla();
                    LimpiarCampos();
                }

            } catch (TipoUsuarioExcepcion ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), null, 2);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), null, 2);
            }
        }
    }//GEN-LAST:event_IngresarActionPerformed

    private void jButton2EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2EliminarActionPerformed
        if (ValidarFormulario()) {
            TipoUsuario tpUsuario = CapturaTipoUsuario();
            try {
                String eliminar = tipoNegocio.eliminar(tpUsuario);
                if (eliminar.equals("Error")) {
                    throw new TipoUsuarioExcepcion("Ocurrio un Error al eliminar ");
                } else {
                    JOptionPane.showMessageDialog(this, "Estudiante Eliminado Satisfactoriamente" + eliminar, null, 1);
                    RefrescarTabla();
                    LimpiarCampos();
                }

            } catch (TipoUsuarioExcepcion ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), null, 2);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), null, 2);
            }
        }  
    }//GEN-LAST:event_jButton2EliminarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
         int seleccionada = jTable1.rowAtPoint(evt.getPoint());

        jTextField1Gerente.setText(String.valueOf(jTable1.getValueAt(seleccionada, 0)));
        jTextField1Administrador.setText(String.valueOf(jTable1.getValueAt(seleccionada, 1)));
        jTextField2Empleado.setText(String.valueOf(jTable1.getValueAt(seleccionada, 2)));
        jTextField3Cliente.setText(String.valueOf(jTable1.getValueAt(seleccionada, 3)));
       
        
       
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1GerenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1GerenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1GerenteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameTipoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameTipoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameTipoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameTipoUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameTipoUsuario().setVisible(true);
            }
        });
    }

    private TipoUsuario CapturaTipoUsuario() {
        TipoUsuario tipoU = new TipoUsuario();
        tipoU.setGerente(jTextField1Gerente.getText());
        tipoU.setAdministrador(jTextField1Gerente.getText());
        tipoU.setCliente(jTextField1Gerente.getText());
        tipoU.setEmpleado(jTextField1Gerente.getText());
        

        return tipoU;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Gerente;
    private javax.swing.JButton Ingresar;
    private javax.swing.JButton jButton2Eliminar;
    private javax.swing.JButton jButton3Actualizar;
    private javax.swing.JLabel jLabel1Nombre;
    private javax.swing.JLabel jLabel2Admin;
    private javax.swing.JLabel jLabel3Empleado;
    private javax.swing.JLabel jLabel4Cliente;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1Administrador;
    private javax.swing.JTextField jTextField1Gerente;
    private javax.swing.JTextField jTextField2Empleado;
    private javax.swing.JTextField jTextField3Cliente;
    // End of variables declaration//GEN-END:variables
private boolean ValidarFormulario() {
        boolean bandera = true;
        String mensaje = "";

        if (jTextField1Gerente.getText().length() < 8) {
            mensaje += "* el tipo de usuario debe tener al menos 8 caracteres";
            bandera = false;
        }

        return bandera;
    }
 private void RefrescarTabla() {
        TableModel tableModel = this.completarTableModel();
//        tableModel.(tableModel);
    }

    private void LimpiarCampos() {
        jTextField1Gerente.setText("");
      
    }

}
