/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import AccesoDatos.UtilidadesArchivos;
import Entidades.Excepciones.TiendaExcepcion;
import Entidades.Inventario;
import Entidades.Tienda;
import Negocio.InventarioNegocio;
import Negocio.TiendaNegocio;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

import Entidades.HistoricoFacturas;
import Entidades.Excepciones.HistoricoFacturasExcepcion;
import Negocio.HistoricoFacturasNegocio;
import java.time.LocalDateTime;

/**
 *
 * @author deada
 */
public class JFrameTienda extends javax.swing.JFrame {

    /**
     * Creates new form JFrameTienda
     */
    TableRowSorter trs = null;
    private final InventarioNegocio inventarioNegocio;
    private final TiendaNegocio tiendaNegocio;
    private final HistoricoFacturasNegocio facturasNegocio;
    private int cantidadDisponible = 0;
    private double neto = 0;
    private double suma = 0;
    private double sumaEnvio = 0;
    private double sumaIVA = 0;
    private String detalleDatos = " ";

    public JFrameTienda() {
        initComponents();
        inventarioNegocio = new InventarioNegocio();
        TableModel tableModel = this.completarCatalogoModel();
        jTable_Catalogo.setModel(tableModel);
        tiendaNegocio = new TiendaNegocio();
        TableModel tableModelTienda = this.completarTiendaModel();
        jTable_Carrito.setModel(tableModelTienda);
        facturasNegocio = new HistoricoFacturasNegocio();

    }

    private TableModel completarCatalogoModel() {
        try {
            List<Inventario> listaProducto = inventarioNegocio.consultarTodosLosProductos();
            Object[] columnas = new Object[]{"Código", "Nombre", "Precio", "Existencias Disponibles", "Categoria"};
            Object[][] datos = new Object[listaProducto.size()][columnas.length];

            for (int i = 0; i < listaProducto.size(); i++) {
                datos[i][0] = listaProducto.get(i).getCodigo();
                datos[i][1] = listaProducto.get(i).getNombre();
                datos[i][2] = listaProducto.get(i).getPrecio();
                datos[i][3] = listaProducto.get(i).getCantidad();
                datos[i][4] = listaProducto.get(i).getCategoria();
            }
            DefaultTableModel model = new DefaultTableModel(datos, columnas);
            return model;
        } catch (Exception ex) {
            Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;

    }

    private TableModel completarTiendaModel() {
        try {
            List<Tienda> listaTienda = tiendaNegocio.consultarTodasLasVentas();
            Object[] columnas = new Object[]{"Código", "Nombre", "Precio", "Cantidad", "Total"};
            Object[][] datos = new Object[listaTienda.size()][columnas.length];

            for (int i = 0; i < listaTienda.size(); i++) {
                datos[i][0] = listaTienda.get(i).getCodigo();
                datos[i][1] = listaTienda.get(i).getNombre();
                datos[i][2] = listaTienda.get(i).getPrecio();
                datos[i][3] = listaTienda.get(i).getCantidad();
                datos[i][4] = listaTienda.get(i).getTotal();

            }
            for (Tienda dato : listaTienda) {
                detalleDatos += dato + "\n";
            }

            DefaultTableModel model = new DefaultTableModel(datos, columnas);
            return model;
        } catch (Exception ex) {
            Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField_PrecioCompra = new javax.swing.JTextField();
        jButton_AgregarCarrito = new javax.swing.JButton();
        jButton_LimpiaCarrito = new javax.swing.JButton();
        jLabel_Error = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Catalogo = new javax.swing.JTable();
        jLabel_Codigo = new javax.swing.JLabel();
        jLabel_CodigoValor = new javax.swing.JLabel();
        jLabel_Nombre = new javax.swing.JLabel();
        jTextField_Nombre = new javax.swing.JTextField();
        jTxt_Filtro = new javax.swing.JTextField();
        jLabel_Filtro = new javax.swing.JLabel();
        jSpinner_CantCompra = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Carrito = new javax.swing.JTable();
        jLabel_NumeroFactura = new javax.swing.JLabel();
        jLabel_NumFactura = new javax.swing.JLabel();
        jButton_Neto = new javax.swing.JButton();
        jTextField_Neto = new javax.swing.JTextField();
        jButton_FinalizarCompra = new javax.swing.JButton();
        jButton_LimpiarCompra = new javax.swing.JButton();
        jButton_ActualizarCantidad = new javax.swing.JButton();
        jButton_EliminarSeleccion = new javax.swing.JButton();
        jLabel_Fondo = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1230, 955));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setText("Compumundohipermegared");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(467, 6, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 51, 102, 90));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Realizar Compra"));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Catálogo");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Cantidad");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Precio");

        jTextField_PrecioCompra.setBackground(new java.awt.Color(0, 153, 153));
        jTextField_PrecioCompra.setForeground(new java.awt.Color(0, 0, 0));

        jButton_AgregarCarrito.setBackground(new java.awt.Color(0, 51, 51));
        jButton_AgregarCarrito.setForeground(new java.awt.Color(255, 255, 255));
        jButton_AgregarCarrito.setText("Agrega al Carrito");
        jButton_AgregarCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AgregarCarritoActionPerformed(evt);
            }
        });

        jButton_LimpiaCarrito.setBackground(new java.awt.Color(0, 51, 51));
        jButton_LimpiaCarrito.setForeground(new java.awt.Color(255, 255, 255));
        jButton_LimpiaCarrito.setText("Limpia el Carrito");
        jButton_LimpiaCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LimpiaCarritoActionPerformed(evt);
            }
        });

        jLabel_Error.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel_Error.setForeground(new java.awt.Color(255, 102, 0));
        jLabel_Error.setText("Error");
        jLabel_Error.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable_Catalogo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable_Catalogo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Nombre", "Precio", "Existencias Disponibles", "Categoria"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Catalogo.setColumnSelectionAllowed(true);
        jTable_Catalogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_CatalogoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Catalogo);
        jTable_Catalogo.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable_Catalogo.getColumnModel().getColumnCount() > 0) {
            jTable_Catalogo.getColumnModel().getColumn(0).setResizable(false);
            jTable_Catalogo.getColumnModel().getColumn(2).setResizable(false);
            jTable_Catalogo.getColumnModel().getColumn(3).setResizable(false);
            jTable_Catalogo.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel_Codigo.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Codigo.setText("Código");

        jLabel_CodigoValor.setBackground(new java.awt.Color(0, 153, 153));
        jLabel_CodigoValor.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_CodigoValor.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel_Nombre.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Nombre.setText("Producto");

        jTextField_Nombre.setBackground(new java.awt.Color(0, 153, 153));

        jTxt_Filtro.setBackground(new java.awt.Color(0, 153, 153));
        jTxt_Filtro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxt_FiltroKeyTyped(evt);
            }
        });

        jLabel_Filtro.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel_Filtro.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Filtro.setText("Filtra nuestro catálogo por categorías");

        jSpinner_CantCompra.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel_Filtro)
                        .addGap(18, 18, 18)
                        .addComponent(jTxt_Filtro, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel_Error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 958, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton_AgregarCarrito)
                            .addComponent(jButton_LimpiaCarrito)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel_Nombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinner_CantCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField_PrecioCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel_Codigo)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel_CodigoValor, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Filtro)
                    .addComponent(jTxt_Filtro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jButton_LimpiaCarrito)
                        .addGap(30, 30, 30)
                        .addComponent(jButton_AgregarCarrito))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_CodigoValor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)
                        .addComponent(jTextField_PrecioCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel_Codigo)
                        .addComponent(jLabel_Nombre)
                        .addComponent(jTextField_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSpinner_CantCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jLabel_Error, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 44, -1, -1));

        jPanel3.setBackground(new java.awt.Color(0, 51, 102, 90));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Carrito de Compras"));

        jTable_Carrito.setBackground(new java.awt.Color(0, 153, 153));
        jTable_Carrito.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable_Carrito.setForeground(new java.awt.Color(51, 51, 51));
        jTable_Carrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Nombre", "Precio", "Cantidad", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Carrito.setColumnSelectionAllowed(true);
        jTable_Carrito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_CarritoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Carrito);
        jTable_Carrito.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable_Carrito.getColumnModel().getColumnCount() > 0) {
            jTable_Carrito.getColumnModel().getColumn(0).setResizable(false);
            jTable_Carrito.getColumnModel().getColumn(1).setResizable(false);
            jTable_Carrito.getColumnModel().getColumn(2).setResizable(false);
            jTable_Carrito.getColumnModel().getColumn(3).setResizable(false);
            jTable_Carrito.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel_NumeroFactura.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel_NumFactura.setText("Numero de Orden");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1123, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel_NumFactura)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel_NumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_NumFactura)
                    .addComponent(jLabel_NumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 645, 1157, -1));

        jButton_Neto.setBackground(new java.awt.Color(0, 51, 51));
        jButton_Neto.setText("Neto a Pagar");
        jButton_Neto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_NetoActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Neto, new org.netbeans.lib.awtextra.AbsoluteConstraints(201, 883, -1, -1));

        jTextField_Neto.setBackground(new java.awt.Color(0, 153, 153));
        jTextField_Neto.setForeground(new java.awt.Color(0, 0, 0));
        jTextField_Neto.setToolTipText("<html>El costo del envió es 30% sobre el subtotal de la compra</html>\n<html>El impuesto de valor agregado es de un 20% sobre el subtotal de la compra</html>\n");
        getContentPane().add(jTextField_Neto, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 883, 147, -1));

        jButton_FinalizarCompra.setBackground(new java.awt.Color(0, 51, 51));
        jButton_FinalizarCompra.setText("Finalizar Compra");
        jButton_FinalizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_FinalizarCompraActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_FinalizarCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(826, 883, -1, -1));

        jButton_LimpiarCompra.setBackground(new java.awt.Color(0, 51, 51));
        jButton_LimpiarCompra.setText("Cancelar Compra");
        jButton_LimpiarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LimpiarCompraActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_LimpiarCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(978, 883, -1, -1));

        jButton_ActualizarCantidad.setBackground(new java.awt.Color(0, 51, 51));
        jButton_ActualizarCantidad.setForeground(new java.awt.Color(255, 255, 255));
        jButton_ActualizarCantidad.setText("Actualizar Cantidad");
        jButton_ActualizarCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ActualizarCantidadActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_ActualizarCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(323, 599, -1, -1));

        jButton_EliminarSeleccion.setBackground(new java.awt.Color(0, 51, 51));
        jButton_EliminarSeleccion.setForeground(new java.awt.Color(255, 255, 255));
        jButton_EliminarSeleccion.setText("Eliminar Seleccion");
        jButton_EliminarSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EliminarSeleccionActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_EliminarSeleccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(761, 599, -1, -1));

        jLabel_Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/1600px BG.png"))); // NOI18N
        getContentPane().add(jLabel_Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 960));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTxt_FiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxt_FiltroKeyTyped
        jTxt_Filtro.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent ke) {
                trs.setRowFilter(RowFilter.regexFilter("(?i)" + jTxt_Filtro.getText(), 4));
            }
        });
        TableModel tableModel = this.completarCatalogoModel();
        trs = new TableRowSorter(tableModel);
        jTable_Catalogo.setRowSorter(trs);
    }//GEN-LAST:event_jTxt_FiltroKeyTyped

    private void jTable_CatalogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_CatalogoMouseClicked
        int seleccionada = jTable_Catalogo.rowAtPoint(evt.getPoint());
        jTextField_Nombre.setText(String.valueOf(jTable_Catalogo.getValueAt(seleccionada, 1)));
        jTextField_PrecioCompra.setText(String.valueOf(jTable_Catalogo.getValueAt(seleccionada, 2)));
        jLabel_CodigoValor.setText(String.valueOf(jTable_Catalogo.getValueAt(seleccionada, 0)));

        cantidadDisponible = Integer.parseInt(String.valueOf(jTable_Catalogo.getValueAt(seleccionada, 3)));

    }//GEN-LAST:event_jTable_CatalogoMouseClicked

    private void jButton_AgregarCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AgregarCarritoActionPerformed
        if (ValidarFormularioTienda()) {
            Tienda carrito = CapturaTienda();
            try {
                String insertar = tiendaNegocio.insertar(carrito);
                if (insertar.equals("Error")) {
                    throw new TiendaExcepcion("Ocurrio un Error al ingresar el producto");
                } else {
                    JOptionPane.showMessageDialog(this, "Producto agregado al carrito " + insertar, null, 1);
                    RefrescarTabla();
                    LimpiarCampos();
                }

            } catch (TiendaExcepcion ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), null, 2);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), null, 2);
            }
        }
    }//GEN-LAST:event_jButton_AgregarCarritoActionPerformed

    private void jButton_LimpiaCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LimpiaCarritoActionPerformed
        vaciarCarrito();
        LimpiarCampos();
        jTextField_Neto.setText("");
    }//GEN-LAST:event_jButton_LimpiaCarritoActionPerformed

    private void jButton_LimpiarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LimpiarCompraActionPerformed
        vaciarCarrito();
        jTextField_Neto.setText("");
    }//GEN-LAST:event_jButton_LimpiarCompraActionPerformed

    private void jButton_NetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_NetoActionPerformed
        compraNeta();
        jTextField_Neto.setText(Double.toString(neto));
    }//GEN-LAST:event_jButton_NetoActionPerformed

    private void jButton_EliminarSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EliminarSeleccionActionPerformed

        Tienda carrito = CapturaTienda();
        try {
            String eliminar = tiendaNegocio.eliminar(carrito);
            if (eliminar.equals("Error")) {
                throw new TiendaExcepcion("Ocurrio un Error al ingresar el producto");
            } else {
                JOptionPane.showMessageDialog(this, "Producto eliminado del carrito " + eliminar, null, 1);
                RefrescarTabla();
                LimpiarCampos();
            }

        } catch (TiendaExcepcion ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), null, 2);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), null, 2);
        }

    }//GEN-LAST:event_jButton_EliminarSeleccionActionPerformed

    private void jTable_CarritoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_CarritoMouseClicked
        int seleccionada = jTable_Carrito.rowAtPoint(evt.getPoint());
        jTextField_Nombre.setText(String.valueOf(jTable_Carrito.getValueAt(seleccionada, 1)));
        jTextField_PrecioCompra.setText(String.valueOf(jTable_Carrito.getValueAt(seleccionada, 2)));
        jLabel_CodigoValor.setText(String.valueOf(jTable_Carrito.getValueAt(seleccionada, 0)));
        jSpinner_CantCompra.setValue(Integer.parseInt(String.valueOf(jTable_Carrito.getValueAt(seleccionada, 3))));
    }//GEN-LAST:event_jTable_CarritoMouseClicked

    private void jButton_ActualizarCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ActualizarCantidadActionPerformed
        Tienda carrito = CapturaTienda();
        try {
            String actualizar = tiendaNegocio.actualizar(carrito);
            if (actualizar.equals("Error")) {
                throw new TiendaExcepcion("Ocurrio un Error al ingresar el producto");
            } else {
                JOptionPane.showMessageDialog(this, "Producto Actualizado correctamente, código #" + actualizar, null, 1);
                RefrescarTabla();
                LimpiarCampos();
            }

        } catch (TiendaExcepcion ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), null, 2);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), null, 2);
        }
    }//GEN-LAST:event_jButton_ActualizarCantidadActionPerformed

    private void jButton_FinalizarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_FinalizarCompraActionPerformed
        HistoricoFacturas facturas = CapturaFactura();
        try {
            String insertar = facturasNegocio.insertar(facturas);
            if (insertar.equals("Error")) {
                throw new TiendaExcepcion("Ocurrio un Error al ingresar el producto");
            } else {
                JOptionPane.showMessageDialog(this, "Factura Generada " + insertar + "Y guardada para futuras referencias", null, 1);

            }

        } catch (TiendaExcepcion ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), null, 2);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), null, 2);
        }

        JOptionPane.showMessageDialog(this, "Su compra se ha realizado con éxito"
                + "\nCosto de la compra:        " + "₡" + suma
                + "\nCosto de envio:                 " + "₡" + sumaEnvio
                + "\nIVA:                                       " + "₡" + sumaIVA
                + "\nGran Total:                         " + "₡" + neto
                + "\n"
                + "\n"
                + "\n"
                + "Gracias por su Compra", null, -1);
        JFrameRecibo recibo = new JFrameRecibo();
        recibo.setVisible(true);
        this.setVisible(false);
        vaciarCarrito();
        LimpiarCampos();
        jTextField_Neto.setText("");
    }//GEN-LAST:event_jButton_FinalizarCompraActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        JFramePrincialCliente jfPrincipalCliente = new JFramePrincialCliente();
        jfPrincipalCliente.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameTienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameTienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameTienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameTienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameTienda().setVisible(true);
            }
        });
    }

    private double compraNeta() {
        int contar = jTable_Carrito.getRowCount();

        for (int i = 0; i < contar; i++) {
            suma = suma + Double.parseDouble(jTable_Carrito.getValueAt(i, 4).toString());
        }
        sumaEnvio = suma * 0.3;
        sumaIVA = suma * 0.2;
        neto = suma + sumaEnvio + sumaIVA;
        return neto;
    }

    @Override
    public String toString() {

        return "\t\tFactura\n"
                + "\t\t\tNúmero de Factura"
                + "\n"
                + "==================================" 
                + "\n"
                + "Nombre: " + "\n"
                + "Dirección:" + "\n"
                + "Email:" + "\n"
                + "Teléfono:" + "\n"
                + "=================================="
                + "\n" + "\n"
                + "Código\tPrecio Unitario\tCantidad\tTotal\tProducto"
                + "\n"
                + detalleDatos
                + "\n"
                + "\n"
                + "\t\t\tCosto de Envio(30%)\t" + sumaEnvio
                + "\n"
                + "\t\t\tIVA(20%)              \t" + sumaIVA
                + "\n"
                + "\t\t\tTotal a pagar      \t" + neto
                +"\n"
                +"\n"
                +"\n"
                +"\n"
                +"Gracias Por Su Comprar";
    }

    private void vaciarCarrito() {
        try {
            BufferedWriter fichero = new BufferedWriter(new FileWriter(UtilidadesArchivos.ARCHIVO_CARRITO));
            fichero.write("");
            fichero.close();
            RefrescarTabla();
        } catch (IOException exception) {
            exception.printStackTrace();
        }

    }

    private boolean ValidarFormularioTienda() {
        boolean bandera = true;
        String mensaje = "";
        jLabel_Error.setVisible(false);
        jLabel_Error.setText("");

        if ((Integer) jSpinner_CantCompra.getValue() <= 0) {
            mensaje += "* La Cantidad no puede ser cero ";
            bandera = false;
        }
        if ((Integer) jSpinner_CantCompra.getValue() > cantidadDisponible) {
            mensaje += "* La Cantidad no puede ser mayor a las existencias ";
            bandera = false;
        }
        jLabel_Error.setVisible(true);
        jLabel_Error.setText(mensaje);
        return bandera;
    }

    private Tienda CapturaTienda() {
        Tienda tienda = new Tienda();
        tienda.setCodigo(jLabel_CodigoValor.getText());
        tienda.setNombre(jTextField_Nombre.getText());
        tienda.setPrecio(Double.parseDouble(jTextField_PrecioCompra.getText()));
        tienda.setCantidad((Integer) jSpinner_CantCompra.getValue());
        tienda.setTotal(Double.parseDouble(jTextField_PrecioCompra.getText()) * ((Integer) jSpinner_CantCompra.getValue()));
        return tienda;
    }

    private HistoricoFacturas CapturaFactura() {
        HistoricoFacturas facturas = new HistoricoFacturas();
        facturas.setCodigoFactura(jLabel_NumeroFactura.getText());
        facturas.setUsuario("Steven Vega");
        facturas.setTotal(suma);
        facturas.setCostoEnvio(sumaEnvio);
        facturas.setIva(sumaIVA);
        facturas.setTotalFinal(neto);
        facturas.setHoraCompra(LocalDateTime.now());
        return facturas;
    }

    private void RefrescarTabla() {
        TableModel tableModelTienda = this.completarTiendaModel();
        jTable_Carrito.setModel(tableModelTienda);
    }

    private void LimpiarCampos() {
        jTextField_Nombre.setText("");
        jSpinner_CantCompra.setValue(0);
        jTextField_PrecioCompra.setText("");
        jLabel_CodigoValor.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_ActualizarCantidad;
    private javax.swing.JButton jButton_AgregarCarrito;
    private javax.swing.JButton jButton_EliminarSeleccion;
    private javax.swing.JButton jButton_FinalizarCompra;
    private javax.swing.JButton jButton_LimpiaCarrito;
    private javax.swing.JButton jButton_LimpiarCompra;
    private javax.swing.JButton jButton_Neto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel_Codigo;
    private javax.swing.JLabel jLabel_CodigoValor;
    private javax.swing.JLabel jLabel_Error;
    private javax.swing.JLabel jLabel_Filtro;
    private javax.swing.JLabel jLabel_Fondo;
    private javax.swing.JLabel jLabel_Nombre;
    private javax.swing.JLabel jLabel_NumFactura;
    private javax.swing.JLabel jLabel_NumeroFactura;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner_CantCompra;
    private javax.swing.JTable jTable_Carrito;
    private javax.swing.JTable jTable_Catalogo;
    private javax.swing.JTextField jTextField_Neto;
    private javax.swing.JTextField jTextField_Nombre;
    private javax.swing.JTextField jTextField_PrecioCompra;
    private javax.swing.JTextField jTxt_Filtro;
    // End of variables declaration//GEN-END:variables
}
